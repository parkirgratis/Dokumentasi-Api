openapi: 3.0.3
info:
  title: Lokasi API
  description: API untuk mendapatkan data lokasi.
  version: 1.0.0
servers:
  - url: https://asia-southeast2-awangga.cloudfunctions.net/parkirgratis
    description: Server Parkir Gratis
  - url: https://asia-southeast2-awangga.cloudfunctions.net/petabackend
    description: Server Petapedia Backend
paths:
  /data/lokasi:
    get:
      tags:
        - Tempat Parkir
      summary: Mendapatkan semua data lokasi
      operationId: getLokasi
      responses:
        "200":
          description: Daftar lokasi berhasil diambil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tempat'
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "Error retrieving data"
  /data/marker:
    get:
      tags:
        - Tempat Parkir
      summary: Mendapatkan koordinat marker parkir terbaru
      operationId: getMarker
      responses:
        "200":
          description: Data marker berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Koordinat'
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error retrieving data"
  /data/warung:
    get:
      tags:
        - Tempat Warung
      summary: Mendapatkan semua data warung
      operationId: getAllWarung
      responses:
        "200":
          description: Daftar warung berhasil diambil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warung'
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "Error retrieving data"
  /data/markerwarung:
    get:
      tags:
        - Tempat Warung
      summary: Mendapatkan koordinat marker warung lokasi terbaru
      operationId: getMarkerWarung
      responses:
        "200":
          description: Data marker berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Koordinat'
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error retrieving data"
  /data/saran:
    get:
      tags:
        - Saran
      summary: Mendapatkan semua data saran
      operationId: getAllSaran
      responses:
        "200":
          description: Data saran berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saran'
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error retrieving data"
  /admin/dashboard:
    get:
      tags:
        - Admin
      summary: Akses Dashboard Admin
      description: Endpoint untuk mengakses dashboard admin. Membutuhkan autentikasi JWT.
      operationId: getAdminDashboard
      security:
        - LoginJWT: []
      responses:
        "200":
          description: Akses dashboard berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Akses dashboard berhasil"
                  admin_id:
                    type: string
                    description: ID admin
                    example: "64b4f2a3c1a8f6d58b10e5a7"
        "401":
          description: Token tidak valid atau tidak ada
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Missing or invalid token"
        "403":
          description: Akses ditolak
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Forbidden: Access denied"
  /tempat-parkir:
    post:
      tags:
        - Tempat Parkir
      summary: Tambah Tempat Parkir
      description: Endpoint untuk menambahkan data tempat parkir baru ke database.
      operationId: postTempatParkir
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TempatParkir'
              type: object
              properties:
                nama_tempat:
                  type: string
                  example: "Parkir Gratis Jakarta"
                  description: Nama tempat parkir
                lokasi:
                  type: string
                  example: "Jl. Merdeka No.1, Jakarta"
                  description: Lokasi tempat parkir
                fasilitas:
                  type: string
                  example: "Toilet, CCTV, Lahan Luas"
                  description: Fasilitas yang tersedia
                lon:
                  type: number
                  format: double
                  example: 106.827183
                  description: Longitude lokasi tempat parkir
                lat:
                  type: number
                  format: double
                  example: -6.175394
                  description: Latitude lokasi tempat parkir
                gambar:
                  type: string
                  example: "gambar1.jpg"
                  description: Nama file gambar tempat parkir
      responses:
        "200":
          description: Tempat parkir berhasil disimpan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Tempat parkir berhasil disimpan dengan ID: 64b4f2a3c1a8f6d58b10e5a7"
        "400":
          description: Data yang dikirim tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request payload"
        "500":
          description: Kesalahan pada server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /data/koordinat:
    post:
      tags:
        - Tempat Parkir
      summary: Tambah Koordinat
      operationId: postKoordinat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Koordinat'
      responses:
        "200":
          description: Koordinat berhasil diperbarui
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Markers updated"
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request payload"
        "500":
          description: Kesalahan pada server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /data/tempat-warung:
    post:
      tags:
        - Tempat Warung
      summary: Tambah Warung
      operationId: postWarung
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TempatWarung'
      responses:
        "200":
          description: Warung berhasil ditambahkan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Warung berhasil disimpan"
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request payload"
        "500":
          description: Kesalahan pada server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /data/tempat:
    delete:
      tags:
        - Tempat Parkir
      summary: Menghapus Tempat Parkir
      description: Endpoint untuk menghapus data tempat parkir berdasarkan ID.
      operationId: deleteTempatParkir
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ID dari tempat parkir yang ingin dihapus
                  example: "64b4f2a3c1a8f6d58b10e5a7"
      responses:
        "200":
          description: Tempat parkir dan marker berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Tempat parkir dan marker berhasil dihapus"
        "400":
          description: ID tidak valid atau permintaan tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request payload"
        "404":
          description: Tempat parkir tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Tempat parkir tidak ditemukan"
        "500":
          description: Kesalahan pada server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /data/marker-warung:
    post:
      tags:
        - Tempat Warung
      summary: Menambahkan koordinat marker warung
      operationId: postKoordinatWarung
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Koordinat'
      responses:
        "200":
          description: Koordinat marker warung berhasil ditambahkan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Marker warung berhasil disimpan"
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request payload"
        "500":
          description: Kesalahan pada server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /data/datasaran:
    post:
      tags:
        - Saran
      summary: Menyimpan saran pengguna
      operationId: postSaran
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Saran'
      responses:
        "200":
          description: Saran berhasil disimpan
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    example: "Saran berhasil disimpan dengan ID: 60c72b2f9b1d8c11f5c3f9f7"
        "400":
          description: Terjadi kesalahan dalam permintaan atau data tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid request payload"
        "500":
          description: Kesalahan pada server
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /data/deletewarung:
    delete:
      tags:
        - Tempat Warung
      summary: Menghapus data warung berdasarkan ID
      operationId: deleteWarungById
      responses:
        "200":
          description: Warung berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Warung berhasil dihapus"
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid ID format"
        "404":
          description: Warung tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Tempat warung not found"
        "500":
          description: Terjadi kesalahan saat menghapus data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Failed to delete document"
    /data/markerwarung:
      get:
        tags:
          - Tempat Warung
        summary: Mendapatkan koordinat marker warung lokasi terbaru
        operationId: getMarkerWarung
        responses:
          "200":
            description: Data marker berhasil diambil
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Koordinat'
          "400":
            description: Terjadi kesalahan dalam permintaan
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: "Error retrieving data"
  /admin/login:
    post:
      tags:
        - Admin
      summary: Login admin untuk mendapatkan token
      operationId: postLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Admin'
      responses:
        "200":
          description: Login berhasil dan token diberikan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Login successful"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1N2I4NTkwNi1mMmFiLTQxZGQtODRkZS0yZDMwNzdiOGQxZDciLCJleHBpcmVkX3N0YXJ0Ijo2MjA1NzE0OUBXcCwsGiwiYS4oM3DK"
        "400":
          description: Permintaan tidak valid, misalnya input kosong atau data yang salah
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid request body"
        "401":
          description: Kredensial tidak valid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid credentials"
        "500":
          description: Kesalahan pada server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Could not generate token"      
  /data/gis/lokasi:
    post:
      tags:
        - Petapedia 
      summary: Get Data Region
      description: Desa/Kelurahan Kecamatan Kabupaten Provinsi
      security:
        - token: []
      operationId: getGeoJSON
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongLatPedia'
            example:
              long: 107.5758500037501
              lat: -6.874720427234501
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRegionResponse'
        '400':
          description: Invalid status value
  /data/gis/lokasiparkir:
      post:
        tags:
          - Petapedia
        summary: Menyimpan data parkir dari petadia
        description: Add a new region to the database
        operationId: insertRegion
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TempatPedia'
        responses:
          '200':
            description: Region successfully saved
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "Success"
                    message:
                      type: string
                      example: "Region successfully saved"
          '400':
            description: Invalid request data
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: "Incomplete region data"
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: "Failed to save region to MongoDB"
  /data/gis/lokasiwarung:
      post:
        tags:
          - Petapedia
        summary: Menyimpan data warung dari petapedia
        description: Add a new warung region to the database
        operationId: insertWarungRegion
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarungPedia'
        responses:
          '200':
            description: Warung region successfully saved
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "Success"
                    message:
                      type: string
                      example: "Region successfully saved"
          '400':
            description: Invalid or incomplete request data
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: "Incomplete region data"
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: "Failed to save region to MongoDB"
components:
  schemas:
    WarungPedia:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for the region
          example: "507f1f77bcf86cd799439011"
        Nama_Tempat:
          type: string
          description: Name of the shop (warung)
          example: "Warung Kopi"
        Lokasi:
          type: string
          description: Location address of the shop
          example: "Jl. Raya No.1"
        Jam_Buka:
          type: string
          description: Opening hours of the shop
          example: "08:00 - 22:00"
        Metode_Pembayaran:
          type: array
          items:
            type: string
            example: "Cash"
        Lon:
          type: number
          format: float
          description: Longitude coordinate of the shop
          example: 106.789
        Lat:
          type: number
          format: float
          description: Latitude coordinate of the shop
          example: -6.174
        Gambar:
          type: string
          description: Image file name (URL)
          example: "image.png"
        Province:
          type: string
          description: Province name
          example: "Jawa Barat"
        District:
          type: string
          description: District name
          example: "Bandung"
        SubDistrict:
          type: string
          description: Subdistrict name
          example: "Cicendo"
        Village:
          type: string
          description: Village name
          example: "Kelurahan A"
      required:
        - Nama_Tempat
        - Lokasi
        - Jam_Buka
        - Metode_Pembayaran
        - Lon
        - Lat
        - Province
        - District
        - SubDistrict
        - Village
    TempatPedia:
      type: object
      properties:
        ID:
          type: string
          format: uuid
          description: Unique identifier for the region
          example: "507f1f77bcf86cd799439011"
        Nama_Tempat:
          type: string
          description: Name of the place
          example: "Parkir Gratis"
        Lokasi:
          type: string
          description: Location address of the place
          example: "Jl. Merdeka No.10"
        Fasilitas:
          type: string
          description: Available facilities at the location
          example: "Toilet, Wifi"
        Lon:
          type: number
          format: float
          description: Longitude coordinate of the place
          example: 106.789
        Lat:
          type: number
          format: float
          description: Latitude coordinate of the place
          example: -6.174
        Gambar:
          type: string
          description: Image file name (URL)
          example: "image.png"
        Province:
          type: string
          description: Province name
          example: "Jawa Barat"
        District:
          type: string
          description: District name
          example: "Bandung"
        SubDistrict:
          type: string
          description: Subdistrict name
          example: "Cicendo"
        Village:
          type: string
          description: Village name
          example: "Kelurahan A"
      required:
        - Nama_Tempat
        - Lokasi
        - Lon
        - Lat
        - Province
        - District
        - SubDistrict
        - Village
    Koordinat:
      type: object
      properties:
        _id:
          type: string
          format: objectId
          description: ID unik untuk koordinat marker
        markers:
          type: array
          description: Daftar koordinat marker
          items:
            type: array
            items:
              type: number
              format: float
    Warung:
      type: object
      properties:
        _id:
          type: string
          format: objectId
          description: ID unik untuk warung
        nama_tempat:
          type: string
          description: Nama tempat warung
        lokasi:
          type: string
          description: Lokasi warung
        jam_buka:
          type: string
          description: Jam operasional warung
        metode_pembayaran:
          type: array
          items:
            type: string
          description: Daftar metode pembayaran yang diterima
        lon:
          type: number
          format: float
          description: Longitude lokasi
        lat:
          type: number
          format: float
          description: Latitude lokasi
        gambar:
          type: string
          format: uri
          description: URL gambar warung
        province:
          type: string
          description: Provinsi tempat warung
        district:
          type: string
          description: Kabupaten atau kota tempat warung
        sub_district:
          type: string
          description: Kecamatan tempat warung
        village:
          type: string
          description: Desa atau kelurahan tempat warung
    TempatWarung:
      type: object
      properties:
        nama_tempat:
          type: string
          description: Nama tempat warung
        lokasi:
          type: string
          description: Lokasi warung
        jam_buka:
          type: string
          description: Jam operasional warung
        metode_pembayaran:
          type: array
          items:
            type: string
          description: Daftar metode pembayaran yang diterima
        lon:
          type: number
          format: float
          description: Longitude lokasi
        lat:
          type: number
          format: float
          description: Latitude lokasi
        gambar:
          type: string
          format: uri
          description: URL gambar warung
    Saran:
      type: object
      properties:
        gmail:
          type: string
          description: Alamat email pengirim saran
        nama:
          type: string
          description: Nama pengirim saran
        saran_user:
          type: string
          description: Isi saran yang diberikan oleh pengguna
        tanggal:
          type: string
          format: date-time
          description: Tanggal dan waktu saran diberikan
    TempatParkir:
      type: object
      properties:
        nama_tempat:
          type: string
          description: Nama tempat parkir
        lokasi:
          type: string
          description: Lokasi tempat parkir
        fasilitas:
          type: string
          description: Fasilitas yang tersedia
        lon:
          type: number
          format: double
          description: Longitude lokasi tempat parkir
        lat:
          type: number
          format: double
          description: Latitude lokasi tempat parkir
        gambar:
          type: string
          description: Nama file gambar tempat parkir
          
    Admin:
      type: object
      properties:
        username:
          type: string
          description: Nama pengguna untuk login
        password:
          type: string
          description: Kata sandi pengguna untuk login
    LongLat:
      type: object
      properties:
        long:
          type: number
          format: float
          description: "Longitude coordinate"
        lat:
          type: number
          format: float
          description: "Latitude coordinate"
      required:
        - long
        - lat
      example:
        long: 107.5758500037501
        lat: -6.874720427234501
    schemas:
    LongLatPedia:
      type: object
      properties:
        long:
          type: number
          format: double
          description: Longitude dari lokasi yang dikirim.
          example: 107.5758500037501
        lat:
          type: number
          format: double
          description: Latitude dari lokasi yang dikirim.
          example: -6.874720427234501

    DataRegionResponse:
      type: object
      properties:
        _id:
          type: string
          description: ID unik dari region (ObjectID MongoDB).
          example: 60f7f9ee4f1a4a3d2c8f9c0b
        province:
          type: string
          description: Nama provinsi.
          example: Jawa Barat
        district:
          type: string
          description: Nama kabupaten/kota.
          example: Kabupaten Bandung
        sub_district:
          type: string
          description: Nama kecamatan.
          example: Soreang
        village:
          type: string
          description: Nama desa/kelurahan.
          example: Desa Pamekaran
        border:
          type: object
          properties:
            type:
              type: string
              description: Tipe geometri, biasanya "Polygon".
              example: Polygon
            coordinates:
              type: array
              description: Koordinat batas wilayah dalam format GeoJSON.
              items:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: double
              example: [[[107.5745, -6.8723], [107.5758, -6.8747], [107.5770, -6.8730], [107.5745, -6.8723]]] 
  securitySchemes:
    LoginJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    token:
      type: apiKey
      name: Login
      in: header 

security:
  - LoginJWT: [] 