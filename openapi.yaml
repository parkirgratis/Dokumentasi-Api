openapi: 3.0.3
info:
  title: Lokasi API
  description: API untuk mendapatkan data lokasi.
  version: 1.0.0
servers:
  - url: https://asia-southeast2-awangga.cloudfunctions.net/parkirgratis
paths:
  /data/lokasi:
    get:
      tags:
        - lokasi
      summary: Mendapatkan semua data lokasi
      operationId: getLokasi
      responses:
        "200":
          description: Daftar lokasi berhasil diambil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tempat'
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "Error retrieving data"
  /data/marker:
    get:
      tags:
        - marker
      summary: Mendapatkan koordinat marker lokasi terbaru
      operationId: getMarker
      responses:
        "200":
          description: Data marker berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Koordinat'
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error retrieving data"
  /data/warung:
    get:
      tags:
        - warung
      summary: Mendapatkan semua data warung
      operationId: getAllWarung
      responses:
        "200":
          description: Daftar warung berhasil diambil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warung'
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  Response:
                    type: string
                    example: "Error retrieving data"
  /data/markerwarung:
    get:
      tags:
        - Koordinat Warung
      summary: Mendapatkan koordinat marker warung lokasi terbaru
      operationId: getMarkerWarung
      responses:
        "200":
          description: Data marker berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Koordinat'
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error retrieving data"
  /data/saran:
    get:
      tags:
        - saran
      summary: Mendapatkan semua data saran
      operationId: getAllSaran
      responses:
        "200":
          description: Data saran berhasil diambil
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Saran'
        "400":
          description: Terjadi kesalahan dalam permintaan
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error retrieving data"
  /admin/dashboard:
    get:
      tags:
        - Admin
      summary: Akses Dashboard Admin
      description: Endpoint untuk mengakses dashboard admin. Membutuhkan autentikasi JWT.
      operationId: getAdminDashboard
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Akses dashboard berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Akses dashboard berhasil"
                  admin_id:
                    type: string
                    description: ID admin
                    example: "64b4f2a3c1a8f6d58b10e5a7"
        "401":
          description: Token tidak valid atau tidak ada
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Missing or invalid token"
        "403":
          description: Akses ditolak
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Forbidden: Access denied"
components:
  schemas:
    Tempat:
      type: object
      properties:
        _id:
          type: string
          format: objectId
          description: ID unik untuk tempat
        nama_tempat:
          type: string
          description: Nama tempat
        lokasi:
          type: string
          description: Lokasi tempat
        fasilitas:
          type: string
          description: Fasilitas yang tersedia
        lon:
          type: number
          format: float
          description: Longitude lokasi
        lat:
          type: number
          format: float
          description: Latitude lokasi
        gambar:
          type: string
          format: uri
          description: URL gambar tempat
        province:
          type: string
          description: Provinsi tempat
        district:
          type: string
          description: Kabupaten atau kota tempat
        sub_district:
          type: string
          description: Kecamatan tempat
        village:
          type: string
          description: Desa atau kelurahan tempat
    Koordinat:
      type: object
      properties:
        _id:
          type: string
          format: objectId
          description: ID unik untuk koordinat marker
        markers:
          type: array
          description: Daftar koordinat marker
          items:
            type: array
            items:
              type: number
              format: float
    Warung:
      type: object
      properties:
        _id:
          type: string
          format: objectId
          description: ID unik untuk warung
        nama_tempat:
          type: string
          description: Nama tempat warung
        lokasi:
          type: string
          description: Lokasi warung
        jam_buka:
          type: string
          description: Jam operasional warung
        metode_pembayaran:
          type: array
          items:
            type: string
          description: Daftar metode pembayaran yang diterima
        lon:
          type: number
          format: float
          description: Longitude lokasi
        lat:
          type: number
          format: float
          description: Latitude lokasi
        gambar:
          type: string
          format: uri
          description: URL gambar warung
        province:
          type: string
          description: Provinsi tempat warung
        district:
          type: string
          description: Kabupaten atau kota tempat warung
        sub_district:
          type: string
          description: Kecamatan tempat warung
        village:
          type: string
          description: Desa atau kelurahan tempat warung
    Saran:
      type: object
      properties:
        _id:
          type: string
          format: objectId
          description: ID unik untuk saran
        isi_saran:
          type: string
          description: Isi saran
        created_at:
          type: string
          format: date-time
          description: Tanggal pembuatan saran
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
